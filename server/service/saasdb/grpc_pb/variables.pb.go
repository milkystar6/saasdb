// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: variables.proto

package grpc_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandleVariablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method                bool                           `protobuf:"varint,1,opt,name=Method,proto3" json:"Method,omitempty"`                                                                                                                // false: show参数" ,true: "set参数"
	ShowVariablesUseArray []*ShowVariablesUseArray       `protobuf:"bytes,2,rep,name=ShowVariablesUseArray,proto3" json:"ShowVariablesUseArray,omitempty"`                                                                                   // show参数 用数组
	SetVariablesUseMap    map[string]*SetVariablesUseMap `protobuf:"bytes,3,rep,name=SetVariablesUseMap,proto3" json:"SetVariablesUseMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // set 参数 用字典
	MySQLIP               string                         `protobuf:"bytes,4,opt,name=MySQLIP,proto3" json:"MySQLIP,omitempty"`
	MySQLPort             int32                          `protobuf:"varint,5,opt,name=MySQLPort,proto3" json:"MySQLPort,omitempty"`
}

func (x *HandleVariablesRequest) Reset() {
	*x = HandleVariablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_variables_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleVariablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleVariablesRequest) ProtoMessage() {}

func (x *HandleVariablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_variables_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleVariablesRequest.ProtoReflect.Descriptor instead.
func (*HandleVariablesRequest) Descriptor() ([]byte, []int) {
	return file_variables_proto_rawDescGZIP(), []int{0}
}

func (x *HandleVariablesRequest) GetMethod() bool {
	if x != nil {
		return x.Method
	}
	return false
}

func (x *HandleVariablesRequest) GetShowVariablesUseArray() []*ShowVariablesUseArray {
	if x != nil {
		return x.ShowVariablesUseArray
	}
	return nil
}

func (x *HandleVariablesRequest) GetSetVariablesUseMap() map[string]*SetVariablesUseMap {
	if x != nil {
		return x.SetVariablesUseMap
	}
	return nil
}

func (x *HandleVariablesRequest) GetMySQLIP() string {
	if x != nil {
		return x.MySQLIP
	}
	return ""
}

func (x *HandleVariablesRequest) GetMySQLPort() int32 {
	if x != nil {
		return x.MySQLPort
	}
	return 0
}

type ShowVariablesUseArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Var string `protobuf:"bytes,1,opt,name=Var,proto3" json:"Var,omitempty"`
}

func (x *ShowVariablesUseArray) Reset() {
	*x = ShowVariablesUseArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_variables_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowVariablesUseArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowVariablesUseArray) ProtoMessage() {}

func (x *ShowVariablesUseArray) ProtoReflect() protoreflect.Message {
	mi := &file_variables_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowVariablesUseArray.ProtoReflect.Descriptor instead.
func (*ShowVariablesUseArray) Descriptor() ([]byte, []int) {
	return file_variables_proto_rawDescGZIP(), []int{1}
}

func (x *ShowVariablesUseArray) GetVar() string {
	if x != nil {
		return x.Var
	}
	return ""
}

type SetVariablesUseMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to VariableValue:
	//	*SetVariablesUseMap_VariableValueString
	//	*SetVariablesUseMap_VariableValueInt32
	VariableValue isSetVariablesUseMap_VariableValue `protobuf_oneof:"VariableValue"`
}

func (x *SetVariablesUseMap) Reset() {
	*x = SetVariablesUseMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_variables_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVariablesUseMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVariablesUseMap) ProtoMessage() {}

func (x *SetVariablesUseMap) ProtoReflect() protoreflect.Message {
	mi := &file_variables_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVariablesUseMap.ProtoReflect.Descriptor instead.
func (*SetVariablesUseMap) Descriptor() ([]byte, []int) {
	return file_variables_proto_rawDescGZIP(), []int{2}
}

func (m *SetVariablesUseMap) GetVariableValue() isSetVariablesUseMap_VariableValue {
	if m != nil {
		return m.VariableValue
	}
	return nil
}

func (x *SetVariablesUseMap) GetVariableValueString() string {
	if x, ok := x.GetVariableValue().(*SetVariablesUseMap_VariableValueString); ok {
		return x.VariableValueString
	}
	return ""
}

func (x *SetVariablesUseMap) GetVariableValueInt32() string {
	if x, ok := x.GetVariableValue().(*SetVariablesUseMap_VariableValueInt32); ok {
		return x.VariableValueInt32
	}
	return ""
}

type isSetVariablesUseMap_VariableValue interface {
	isSetVariablesUseMap_VariableValue()
}

type SetVariablesUseMap_VariableValueString struct {
	VariableValueString string `protobuf:"bytes,1,opt,name=VariableValueString,proto3,oneof"`
}

type SetVariablesUseMap_VariableValueInt32 struct {
	VariableValueInt32 string `protobuf:"bytes,2,opt,name=VariableValueInt32,proto3,oneof"`
}

func (*SetVariablesUseMap_VariableValueString) isSetVariablesUseMap_VariableValue() {}

func (*SetVariablesUseMap_VariableValueInt32) isSetVariablesUseMap_VariableValue() {}

//      定义HandleVariables返回的消息
type HandleVariablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// for show variables
	VariableName map[string]string `protobuf:"bytes,1,rep,name=variableName,proto3" json:"variableName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// for set variables
	SetVariablesUseMap map[string]*SetVariablesUseMap `protobuf:"bytes,2,rep,name=SetVariablesUseMap,proto3" json:"SetVariablesUseMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SetOK              bool                           `protobuf:"varint,3,opt,name=SetOK,proto3" json:"SetOK,omitempty"`
}

func (x *HandleVariablesResponse) Reset() {
	*x = HandleVariablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_variables_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleVariablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleVariablesResponse) ProtoMessage() {}

func (x *HandleVariablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_variables_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleVariablesResponse.ProtoReflect.Descriptor instead.
func (*HandleVariablesResponse) Descriptor() ([]byte, []int) {
	return file_variables_proto_rawDescGZIP(), []int{3}
}

func (x *HandleVariablesResponse) GetVariableName() map[string]string {
	if x != nil {
		return x.VariableName
	}
	return nil
}

func (x *HandleVariablesResponse) GetSetVariablesUseMap() map[string]*SetVariablesUseMap {
	if x != nil {
		return x.SetVariablesUseMap
	}
	return nil
}

func (x *HandleVariablesResponse) GetSetOK() bool {
	if x != nil {
		return x.SetOK
	}
	return false
}

var File_variables_proto protoreflect.FileDescriptor

var file_variables_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x22, 0x88, 0x03, 0x0a, 0x16, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x53, 0x0a, 0x15,
	0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x61,
	0x61, 0x73, 0x64, 0x62, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x55, 0x73, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x15, 0x53, 0x68, 0x6f, 0x77,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x12, 0x66, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x79, 0x53, 0x51,
	0x4c, 0x49, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x50, 0x6f, 0x72,
	0x74, 0x1a, 0x61, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x29, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x56, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x61, 0x72, 0x22,
	0x8b, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x13, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x12, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x0f, 0x0a, 0x0d,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x93, 0x03,
	0x0a, 0x17, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x67, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73,
	0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x65, 0x74,
	0x4f, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x53, 0x65, 0x74, 0x4f, 0x4b, 0x1a,
	0x3f, 0x0a, 0x11, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x61, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x55, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x32, 0x6e, 0x0a, 0x15, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x10,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x12, 0x1e, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62,
	0x2f, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_variables_proto_rawDescOnce sync.Once
	file_variables_proto_rawDescData = file_variables_proto_rawDesc
)

func file_variables_proto_rawDescGZIP() []byte {
	file_variables_proto_rawDescOnce.Do(func() {
		file_variables_proto_rawDescData = protoimpl.X.CompressGZIP(file_variables_proto_rawDescData)
	})
	return file_variables_proto_rawDescData
}

var file_variables_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_variables_proto_goTypes = []interface{}{
	(*HandleVariablesRequest)(nil),  // 0: saasdb.HandleVariablesRequest
	(*ShowVariablesUseArray)(nil),   // 1: saasdb.ShowVariablesUseArray
	(*SetVariablesUseMap)(nil),      // 2: saasdb.SetVariablesUseMap
	(*HandleVariablesResponse)(nil), // 3: saasdb.HandleVariablesResponse
	nil,                             // 4: saasdb.HandleVariablesRequest.SetVariablesUseMapEntry
	nil,                             // 5: saasdb.HandleVariablesResponse.VariableNameEntry
	nil,                             // 6: saasdb.HandleVariablesResponse.SetVariablesUseMapEntry
}
var file_variables_proto_depIdxs = []int32{
	1, // 0: saasdb.HandleVariablesRequest.ShowVariablesUseArray:type_name -> saasdb.ShowVariablesUseArray
	4, // 1: saasdb.HandleVariablesRequest.SetVariablesUseMap:type_name -> saasdb.HandleVariablesRequest.SetVariablesUseMapEntry
	5, // 2: saasdb.HandleVariablesResponse.variableName:type_name -> saasdb.HandleVariablesResponse.VariableNameEntry
	6, // 3: saasdb.HandleVariablesResponse.SetVariablesUseMap:type_name -> saasdb.HandleVariablesResponse.SetVariablesUseMapEntry
	2, // 4: saasdb.HandleVariablesRequest.SetVariablesUseMapEntry.value:type_name -> saasdb.SetVariablesUseMap
	2, // 5: saasdb.HandleVariablesResponse.SetVariablesUseMapEntry.value:type_name -> saasdb.SetVariablesUseMap
	0, // 6: saasdb.MySQLVariablesService.VariablesHandler:input_type -> saasdb.HandleVariablesRequest
	3, // 7: saasdb.MySQLVariablesService.VariablesHandler:output_type -> saasdb.HandleVariablesResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_variables_proto_init() }
func file_variables_proto_init() {
	if File_variables_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_variables_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleVariablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_variables_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowVariablesUseArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_variables_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVariablesUseMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_variables_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleVariablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_variables_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SetVariablesUseMap_VariableValueString)(nil),
		(*SetVariablesUseMap_VariableValueInt32)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_variables_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_variables_proto_goTypes,
		DependencyIndexes: file_variables_proto_depIdxs,
		MessageInfos:      file_variables_proto_msgTypes,
	}.Build()
	File_variables_proto = out.File
	file_variables_proto_rawDesc = nil
	file_variables_proto_goTypes = nil
	file_variables_proto_depIdxs = nil
}
