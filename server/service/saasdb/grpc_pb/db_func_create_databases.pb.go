// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: db_func_create_databases.proto

package grpc_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 定义获取参数需要的消息
type CreateSingleMySQLInstanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version               string    `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	ReplUser              string    `protobuf:"bytes,2,opt,name=ReplUser,proto3" json:"ReplUser,omitempty"`
	ReplUserPasswd        string    `protobuf:"bytes,3,opt,name=ReplUserPasswd,proto3" json:"ReplUserPasswd,omitempty"`
	BackUpAdminUser       string    `protobuf:"bytes,4,opt,name=BackUpAdminUser,proto3" json:"BackUpAdminUser,omitempty"`
	BackUpAdminUserPasswd string    `protobuf:"bytes,5,opt,name=BackUpAdminUserPasswd,proto3" json:"BackUpAdminUserPasswd,omitempty"`
	MaxConnections        int32     `protobuf:"varint,6,opt,name=MaxConnections,proto3" json:"MaxConnections,omitempty"`
	MaxMemorySize         int32     `protobuf:"varint,7,opt,name=MaxMemorySize,proto3" json:"MaxMemorySize,omitempty"`
	MySQLIP               string    `protobuf:"bytes,8,opt,name=MySQLIP,proto3" json:"MySQLIP,omitempty"`
	MysqlPort             int32     `protobuf:"varint,9,opt,name=MysqlPort,proto3" json:"MysqlPort,omitempty"`
	DomainId              int32     `protobuf:"varint,10,opt,name=DomainId,proto3" json:"DomainId,omitempty"`
	InstanceName          string    `protobuf:"bytes,11,opt,name=InstanceName,proto3" json:"InstanceName,omitempty"`
	HostId                int32     `protobuf:"varint,12,opt,name=HostId,proto3" json:"HostId,omitempty"`
	UseType               string    `protobuf:"bytes,13,opt,name=UseType,proto3" json:"UseType,omitempty"`
	MySQLHub              *MySQLHub `protobuf:"bytes,14,opt,name=MySQLHub,proto3" json:"MySQLHub,omitempty"`
}

func (x *CreateSingleMySQLInstanceReq) Reset() {
	*x = CreateSingleMySQLInstanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_func_create_databases_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSingleMySQLInstanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleMySQLInstanceReq) ProtoMessage() {}

func (x *CreateSingleMySQLInstanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_db_func_create_databases_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleMySQLInstanceReq.ProtoReflect.Descriptor instead.
func (*CreateSingleMySQLInstanceReq) Descriptor() ([]byte, []int) {
	return file_db_func_create_databases_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSingleMySQLInstanceReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateSingleMySQLInstanceReq) GetReplUser() string {
	if x != nil {
		return x.ReplUser
	}
	return ""
}

func (x *CreateSingleMySQLInstanceReq) GetReplUserPasswd() string {
	if x != nil {
		return x.ReplUserPasswd
	}
	return ""
}

func (x *CreateSingleMySQLInstanceReq) GetBackUpAdminUser() string {
	if x != nil {
		return x.BackUpAdminUser
	}
	return ""
}

func (x *CreateSingleMySQLInstanceReq) GetBackUpAdminUserPasswd() string {
	if x != nil {
		return x.BackUpAdminUserPasswd
	}
	return ""
}

func (x *CreateSingleMySQLInstanceReq) GetMaxConnections() int32 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *CreateSingleMySQLInstanceReq) GetMaxMemorySize() int32 {
	if x != nil {
		return x.MaxMemorySize
	}
	return 0
}

func (x *CreateSingleMySQLInstanceReq) GetMySQLIP() string {
	if x != nil {
		return x.MySQLIP
	}
	return ""
}

func (x *CreateSingleMySQLInstanceReq) GetMysqlPort() int32 {
	if x != nil {
		return x.MysqlPort
	}
	return 0
}

func (x *CreateSingleMySQLInstanceReq) GetDomainId() int32 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *CreateSingleMySQLInstanceReq) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *CreateSingleMySQLInstanceReq) GetHostId() int32 {
	if x != nil {
		return x.HostId
	}
	return 0
}

func (x *CreateSingleMySQLInstanceReq) GetUseType() string {
	if x != nil {
		return x.UseType
	}
	return ""
}

func (x *CreateSingleMySQLInstanceReq) GetMySQLHub() *MySQLHub {
	if x != nil {
		return x.MySQLHub
	}
	return nil
}

type MySQLHub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MySQLHubIP       string `protobuf:"bytes,1,opt,name=MySQLHubIP,proto3" json:"MySQLHubIP,omitempty"`
	MySQLHubPort     int32  `protobuf:"varint,2,opt,name=MySQLHubPort,proto3" json:"MySQLHubPort,omitempty"`
	MySQLHubDir      string `protobuf:"bytes,3,opt,name=MySQLHubDir,proto3" json:"MySQLHubDir,omitempty"`
	HubSshUser       string `protobuf:"bytes,4,opt,name=HubSshUser,proto3" json:"HubSshUser,omitempty"`
	HubSsHUserPasswd string `protobuf:"bytes,5,opt,name=HubSsHUserPasswd,proto3" json:"HubSsHUserPasswd,omitempty"`
}

func (x *MySQLHub) Reset() {
	*x = MySQLHub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_func_create_databases_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLHub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLHub) ProtoMessage() {}

func (x *MySQLHub) ProtoReflect() protoreflect.Message {
	mi := &file_db_func_create_databases_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLHub.ProtoReflect.Descriptor instead.
func (*MySQLHub) Descriptor() ([]byte, []int) {
	return file_db_func_create_databases_proto_rawDescGZIP(), []int{1}
}

func (x *MySQLHub) GetMySQLHubIP() string {
	if x != nil {
		return x.MySQLHubIP
	}
	return ""
}

func (x *MySQLHub) GetMySQLHubPort() int32 {
	if x != nil {
		return x.MySQLHubPort
	}
	return 0
}

func (x *MySQLHub) GetMySQLHubDir() string {
	if x != nil {
		return x.MySQLHubDir
	}
	return ""
}

func (x *MySQLHub) GetHubSshUser() string {
	if x != nil {
		return x.HubSshUser
	}
	return ""
}

func (x *MySQLHub) GetHubSsHUserPasswd() string {
	if x != nil {
		return x.HubSsHUserPasswd
	}
	return ""
}

type CreateSingleMySQLInstanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOk bool   `protobuf:"varint,1,opt,name=IsOk,proto3" json:"IsOk,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *CreateSingleMySQLInstanceRes) Reset() {
	*x = CreateSingleMySQLInstanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_func_create_databases_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSingleMySQLInstanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleMySQLInstanceRes) ProtoMessage() {}

func (x *CreateSingleMySQLInstanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_db_func_create_databases_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleMySQLInstanceRes.ProtoReflect.Descriptor instead.
func (*CreateSingleMySQLInstanceRes) Descriptor() ([]byte, []int) {
	return file_db_func_create_databases_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSingleMySQLInstanceRes) GetIsOk() bool {
	if x != nil {
		return x.IsOk
	}
	return false
}

func (x *CreateSingleMySQLInstanceRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_db_func_create_databases_proto protoreflect.FileDescriptor

var file_db_func_create_databases_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x64, 0x62, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x22, 0x82, 0x04, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x42, 0x61, 0x63, 0x6b, 0x55,
	0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x15, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x42, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x49, 0x50,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x49, 0x50, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2c, 0x0a, 0x08, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x48, 0x75, 0x62, 0x52, 0x08, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x22, 0xbc, 0x01,
	0x0a, 0x08, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x49, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x49, 0x50, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x48, 0x75, 0x62, 0x44, 0x69, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x75, 0x62, 0x53, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x48, 0x75, 0x62, 0x53, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x2a, 0x0a, 0x10, 0x48, 0x75, 0x62, 0x53, 0x73, 0x48, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x48, 0x75, 0x62, 0x53,
	0x73, 0x48, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x22, 0x44, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x79, 0x53, 0x51,
	0x4c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x73, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x73, 0x4f, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x73, 0x67, 0x32, 0x88, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6c, 0x0a, 0x1c, 0x4e, 0x65, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x24, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x64, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x14, 0x5a,
	0x12, 0x2e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2f, 0x3b, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_db_func_create_databases_proto_rawDescOnce sync.Once
	file_db_func_create_databases_proto_rawDescData = file_db_func_create_databases_proto_rawDesc
)

func file_db_func_create_databases_proto_rawDescGZIP() []byte {
	file_db_func_create_databases_proto_rawDescOnce.Do(func() {
		file_db_func_create_databases_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_func_create_databases_proto_rawDescData)
	})
	return file_db_func_create_databases_proto_rawDescData
}

var file_db_func_create_databases_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_db_func_create_databases_proto_goTypes = []interface{}{
	(*CreateSingleMySQLInstanceReq)(nil), // 0: saasdb.CreateSingleMySQLInstanceReq
	(*MySQLHub)(nil),                     // 1: saasdb.MySQLHub
	(*CreateSingleMySQLInstanceRes)(nil), // 2: saasdb.CreateSingleMySQLInstanceRes
}
var file_db_func_create_databases_proto_depIdxs = []int32{
	1, // 0: saasdb.CreateSingleMySQLInstanceReq.MySQLHub:type_name -> saasdb.MySQLHub
	0, // 1: saasdb.CreateSingleMySQLService.NewCreateSingleMySQLInstance:input_type -> saasdb.CreateSingleMySQLInstanceReq
	2, // 2: saasdb.CreateSingleMySQLService.NewCreateSingleMySQLInstance:output_type -> saasdb.CreateSingleMySQLInstanceRes
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_db_func_create_databases_proto_init() }
func file_db_func_create_databases_proto_init() {
	if File_db_func_create_databases_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_func_create_databases_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSingleMySQLInstanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_func_create_databases_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLHub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_func_create_databases_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSingleMySQLInstanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_func_create_databases_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_db_func_create_databases_proto_goTypes,
		DependencyIndexes: file_db_func_create_databases_proto_depIdxs,
		MessageInfos:      file_db_func_create_databases_proto_msgTypes,
	}.Build()
	File_db_func_create_databases_proto = out.File
	file_db_func_create_databases_proto_rawDesc = nil
	file_db_func_create_databases_proto_goTypes = nil
	file_db_func_create_databases_proto_depIdxs = nil
}
